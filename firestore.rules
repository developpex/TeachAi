rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function hasRole(role) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    function isOwner() {
      return hasRole('owner');
    }

    function isAdmin() {
      return hasRole('admin');
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isUser(userId);
      allow update: if isUser(userId) || isAdmin() || isOwner();
      allow delete: if isAdmin() || isOwner();

      // Allow users to update their own favorites
      allow update: if isUser(userId) && 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['favorites']);
    }

    // ... rest of your rules ...
  }
}